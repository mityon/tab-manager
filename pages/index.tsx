import Head from "next/head";
import { useEffect, useState } from "react";
import { IconContext } from "react-icons";
import { AiOutlineCloseCircle } from "react-icons/ai";

export default function Home() {
  const [tab, setTab] = useState<chrome.tabs.Tab[]>([]);

  useEffect(() => {
    const currentTab = async () => await getCurrentTab();
    currentTab();
  }, []);

  const getCurrentTab = async () => {
    let queryOptions = { active: true, lastFocusedWindow: true };
    let tab: chrome.tabs.Tab[] = [];
    if (chrome.tabs) {
      tab = await chrome.tabs.query({});
    }
    setTab(tab);
    return tab;
  };

  const onClickTitleHandler = (id: number | undefined) => {
    if (id !== undefined) {
      console.log(tab);
      chrome.tabs.update(id, { active: true });
    }
  };

  const onClickCloseHandler = async (id: number | undefined) => {
    console.log('onClickCloseHandler')
    if (id !== undefined) {
      await chrome.tabs.remove(id);
      getCurrentTab();
    }
  };

  const onClickDeleteDuplicateHandler = async () => {
    const uniqueTabs:Map<string|undefined,chrome.tabs.Tab> = new Map(tab.map((tab) => 
    [tab.url, tab]));
    for (let tabData of tab) {
      if(tabData.url && tabData.id && uniqueTabs.get(tabData.url)?.id != tabData.id){
        await chrome.tabs.remove(tabData.id);
      }
    }
    getCurrentTab();
  };

  return (
    <>
      <Head>
        <title>Tab Manager</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="m-2">
        <div>
          <button
            className="bg-red-500 hover:bg-red-400 text-white rounded px-4 py-2"
            onClick={() => onClickDeleteDuplicateHandler()}
          >
            重複削除
          </button>
        </div>
        <div>
          {
            <ul className="bg-gray-50 mt-2">
              {tab.map((data) => {
                return (
                  <>
                    <li
                      key={data.id}
                      className="hover:cursor-pointer bg-gray-50 hover:bg-gray-200"
                    >
                      <IconContext.Provider
                        value={{ color: "red", size: "1.5rem" }}
                      >
                        <AiOutlineCloseCircle
                          className="inline mx-1"
                          onClick={() => onClickCloseHandler(data.id)}
                        />
                        <span
                          className="text-base m-1"
                          onClick={() => onClickTitleHandler(data.id)}
                        >
                          <img
                            src={data.favIconUrl}
                            className="h-5 inline mr-1"
                          />
                          {data.title}
                        </span>
                      </IconContext.Provider>
                    </li>
                  </>
                );
              })}
            </ul>
          }
        </div>
      </main>
    </>
  );
}
